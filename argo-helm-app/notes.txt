# create namespace
kubectl create namespace argocd

# install argocd v1.4.3
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v1.4.3/manifests/install.yaml

# download argocd CLI
wget https://github.com/argoproj/argo-cd/releases/download/v1.4.3/argocd-linux-amd64
mv argocd-linux-amd64 argocd
chmod +x argocd

# Change the argocd-server service type to LoadBalancer
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

# Use port forwarding to connect to the API server without exposing the service
kubectl port-forward svc/argocd-server -n argocd 8080:443

# Get the argocd password
kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d'/' -f 2

# Login to argocd
argocd login localhost:8080
user: admin
password: ********

# List all cluster contexts
kubectl config get-contexts -o name

# Choose a context name from the list and supply it to following command
argocd cluster add <cluster-context-name>

# Update argocd password
./argocd account update-password*** Enter password of currently logged in user (admin):
*** Enter new password for user admin:
*** Confirm new password for user admin:
Password updated
Context 'localhost:8080' updated

# Install helm 2
./get_helm.sh

kubectl apply -f tiller-account-rbac.yaml

helm init --service-account=tiller \
>    --stable-repo-url=https://charts.helm.sh/stable \
>    --upgrade \
>    --automount-service-account-token=true \
>    --replicas=1 \
>    --history-max=100 \
>    --wait

helm version

# Create an argo app
kubectl apply -f myapp.yaml

# List app
./argocd app list

# Sync app
./argocd app sync myapp

# Delete argo cd app using kubectl CLI (use this if app is created using point 12)
kubectl delete -f myapp.yaml

